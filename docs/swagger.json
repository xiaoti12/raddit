{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple forum service.",
        "title": "Raddit",
        "contact": {},
        "version": "1.0"
    },
    "host": "127.0.0.1:8898",
    "basePath": "/api",
    "paths": {
        "/community/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "get community detail info by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "community id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerCommunityDetailResponse"
                        }
                    }
                }
            }
        },
        "/create/post": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "create new post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "create post params",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        },
        "/list/community": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "get community basic info list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerCommunityListResponse"
                        }
                    }
                }
            }
        },
        "/list/post": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "get post info list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerPostListResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "user login",
                "parameters": [
                    {
                        "description": "login params",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        },
        "/post/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "get post detail by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "post id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SwaggerPostDetailResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "register new user",
                "parameters": [
                    {
                        "description": "register params",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        },
        "/vote": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "vote for post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization: Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "vote params",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VoteParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.ResponseCode": {
            "type": "integer",
            "enum": [
                1000,
                1001,
                1002,
                1003,
                1004,
                1005,
                1006,
                1007
            ],
            "x-enum-varnames": [
                "CodeSuccess",
                "CodeInvalidParams",
                "CodeUserExist",
                "CodeUserNotExist",
                "CodeInvalidPassword",
                "CodeNeedLogin",
                "CodeInvalidToken",
                "CodeServerError"
            ]
        },
        "controller.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/controller.ResponseCode"
                },
                "data": {
                    "description": "may be string or json object"
                },
                "msg": {
                    "description": "may be string or json object"
                }
            }
        },
        "controller.SwaggerCommunityDetailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/controller.ResponseCode"
                },
                "data": {
                    "$ref": "#/definitions/models.CommunityDetail"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "controller.SwaggerCommunityListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/controller.ResponseCode"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CommunityBasic"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "controller.SwaggerPostDetailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/controller.ResponseCode"
                },
                "data": {
                    "$ref": "#/definitions/models.PostDetail"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "controller.SwaggerPostListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/controller.ResponseCode"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PostDetail"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.CommunityBasic": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "integer"
                },
                "community_name": {
                    "type": "string"
                }
            }
        },
        "models.CommunityDetail": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "integer"
                },
                "community_name": {
                    "type": "string"
                },
                "create_time": {
                    "type": "string"
                },
                "introduction": {
                    "type": "string"
                },
                "update_time": {
                    "type": "string"
                }
            }
        },
        "models.LoginParams": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Post": {
            "type": "object",
            "required": [
                "community_id",
                "content",
                "title"
            ],
            "properties": {
                "author_id": {
                    "type": "string",
                    "example": "0"
                },
                "community_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "create_time": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string",
                    "example": "0"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.PostDetail": {
            "type": "object",
            "required": [
                "community_id",
                "content",
                "title"
            ],
            "properties": {
                "author_id": {
                    "type": "string",
                    "example": "0"
                },
                "author_name": {
                    "type": "string"
                },
                "community_id": {
                    "type": "integer"
                },
                "community_name": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "create_time": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string",
                    "example": "0"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "vote_num": {
                    "type": "integer"
                }
            }
        },
        "models.RegisterParams": {
            "type": "object",
            "required": [
                "password",
                "re_password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "re_password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.VoteParams": {
            "type": "object",
            "required": [
                "post_id"
            ],
            "properties": {
                "attitude": {
                    "type": "integer",
                    "enum": [
                        1,
                        0,
                        -1
                    ]
                },
                "post_id": {
                    "type": "string",
                    "example": "0"
                },
                "user_id": {
                    "type": "string",
                    "example": "0"
                }
            }
        }
    }
}